services:
  acme-keycloak:
    #image: quay.io/keycloak/keycloak:$KEYCLOAK_VERSION

    build:
      context: "./keycloakx"
      dockerfile: "./Dockerfile"

    #    user: "${USER}:${GROUP}"
    env_file:
      - ./keycloak-common.env
      - ./keycloak-http.env
    environment:
    # Enable remote debugging
      DEBUG: "true"
      DEBUG_PORT: "*:8787"
      # DEBUG_SUSPEND: "y"

      JAVA_OPTS: "-XX:MaxRAMPercentage=80 -XX:+UseG1GC -Djava.net.preferIPv4Stack=true -Djava.security.egd=file:/dev/urandom"
      # Append additional JVM Options besides the default JVM_OPTS
      # See: https://github.com/keycloak/keycloak/blob/main/distribution/server-x-dist/src/main/content/bin/kc.sh#L66
      # -XX:+PrintFlagsFinal
      JAVA_OPTS_APPEND: "--show-version"

      # Force usage of HTTP 1.1 to be able to honor HTTP Header size limits
      # QUARKUS_HTTP_HTTP2: "false"
      # QUARKUS_HTTP_LIMITS_MAX_HEADER_SIZE: "64k"

      # Allow access via visualvm and jmc (remote jmx connection to localhost 8790 without ssl)
      # see https://docs.oracle.com/en/java/javase/11/management/monitoring-and-management-using-jmx-technology.html#GUID-D4CBA2D6-2E24-4856-A7D8-62B3DFFB76EA
      # JAVA_TOOL_OPTIONS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8790 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/opt/keycloak/conf/jmxremote.password -Dcom.sun.management.jmxremote.ssl=false -XX:FlightRecorderOptions=stackdepth=256"
      #JAVA_TOOL_OPTIONS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8790 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -XX:FlightRecorderOptions=stackdepth=256"

      # JAVA_TOOL_OPTIONS="" jcmd 1 JFR.start duration=1m settings=profile name=debug filename=/opt/keycloak/perf/debug.jfr
      # JAVA_TOOL_OPTIONS="" jcmd 1 JFR.dump name=debug filename=/opt/keycloak/perf/debug.jfr
      JAVA_TOOL_OPTIONS: "-XX:FlightRecorderOptions=stackdepth=256 -XX:+FlightRecorder -XX:StartFlightRecording=duration=200s,filename=/opt/keycloak/perf/debug.jfr,name=debug"
    mem_limit: 2048m
    mem_reservation: 2048m
    cpus: 4

    command:
      - "--verbose"
      - "start-dev"
      - "--http-enabled=true"
      - "--http-port=8080"
      - "--https-client-auth=request"
      - "--http-relative-path=auth"
#      - "--http-management-port=9090"
      - "--metrics-enabled=true"
      - "--health-enabled=true"
      # see https://www.keycloak.org/server/features
      # ,declarative-ui
      - "--features=preview,transient-users,dynamic-scopes"
      - "--cache=local"
      - "--proxy-headers=xforwarded"
 #     - "--log-console-output=json"
      - "--log-console-format='%d{HH:mm:ss} %-5p ${TRACING_LOG_FORMAT} [%c{2.}] (%t) %s%e%n'"
      - "--https-protocols=TLSv1.3,TLSv1.2"
# expose health and metrics via main http interface
      - "--legacy-observability-interface=true"
      - "--spi-theme-cache-themes=false"
      - "--spi-theme-cache-templates=false"
      - "--spi-theme-static-max-age=-1"
      - "--spi-events-listener-email-exclude-events=LOGIN,LOGIN_ERROR,UPDATE_TOTP,REMOVE_TOTP"
      - "--spi-events-listener-email-include-events=UPDATE_PASSWORD"
      - "--spi-events-listener-jboss-logging-success-level=info"
      - "--spi-events-listener-jboss-logging-error-level=warn"
# Disable automatic migration
#      - "--spi-connections-jpa-legacy-migration-strategy=manual"
#      - "--spi-truststore-file-file=/opt/keycloak/conf/truststore.p12"
#      - "--spi-truststore-file-password=changeit"
# Example for static overrides for .well-known/openid-configuration endpoint
#      - "--spi-well-known-openid-configuration-openid-configuration-override=/opt/keycloak/conf/openid-config.json"
#      - "--spi-well-known-openid-configuration-include-client-scopes=true"
# Workaround to allow logouts via old Keycloak Admin-Console
# see: org.keycloak.protocol.oidc.endpoints.LogoutEndpoint.logout(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
      - "--spi-login-protocol-openid-connect-legacy-logout-redirect-uri=false"
#      - "--log-level=info,io.quarkus.vertx:debug,io.netty:debug,io.vertx:debug"
#      - "--log-level=info,org.keycloak.models.sessions.infinispan.InfinispanUserSessionProvider:debug"
#      - "--log-level=info,org.hibernate:debug"
#      - "--log-level=info,org.hibernate.SQL:debug"
#      - "--log-level=info,org.hibernate.SQL:debug,org.hibernate.type.descriptor.sql.BasicBinder:trace"
      - "--log-level=info,com.github.thomasdarimont.keycloak.custom.health.CustomHealthChecks:info,com.github.thomasdarimont.keycloak.custom:debug,com.arjuna.ats.jta:off,org.keycloak.services.resources.admin.permissions:debug"
#      - "--verbose"
    #      - "-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.SimpleLog"
      - "-Dio.netty.http2.maxHeaderListSize=16384"
      - "--spi-admin-realm-restapi-extension-custom-admin-resources-users-provisioning-required-realm-role=user-modifier-acme"
      - "--spi-admin-realm-restapi-extension-custom-admin-resources-users-provisioning-managed-attribute-pattern=(.*)"
    extra_hosts:
      # ${DOCKER_HOST_IP:-172.17.0.1} is host.docker.internal
      - "id.acme.test:${DOCKER_HOST_IP:-172.17.0.1}"
      - "apps.acme.test:${DOCKER_HOST_IP:-172.17.0.1}"
      - "ops.acme.test:${DOCKER_HOST_IP:-172.17.0.1}"
    ports:
      - "8080:8080"
 #     - "9090:9090"
      - "8443:8443"
      - "127.0.0.1:8790:8790"
      - "127.0.0.1:8787:8787"
    volumes:
      - ../../../keycloak/themes:/opt/keycloak/themes:z
#      - ../../../keycloak/config/profile.properties:/opt/keycloak/conf/profile.properties:z
      - ../../../keycloak/config/quarkus.properties:/opt/keycloak/conf/quarkus.properties:z
      - ../../../keycloak/config/openid-config.json:/opt/keycloak/conf/openid-config.json:z
      - ../../../keycloak/config/jmxremote.password:/opt/keycloak/conf/jmxremote.password:ro
      - ../../../keycloak/imex:/opt/keycloak/imex:z
      - ./run/keycloakx/data26:/opt/keycloak/data:z
      - ./run/keycloakx/logs:/opt/keycloak/logs:z
      - ./run/keycloakx/perf:/opt/keycloak/perf:z
# Add keycloak extensions
#      - ../../../keycloak/extensions/target/extensions.jar:/opt/keycloak/providers/extensions.jar:z
      - ../../../keycloak/extensions/target/extensions-jar-with-dependencies.jar:/opt/keycloak/providers/extensions.jar:z

# Add third-party extensions
#      - ./keycloak-ext/keycloak-metrics-spi-3.0.0.jar:/opt/keycloak/providers/keycloak-metrics-spi.jar:z
      - ./keycloak-ext/keycloak-restrict-client-auth-25.0.0.jar:/opt/keycloak/providers/keycloak-restrict-client-auth.jar:z
      - ./keycloak-ext/keycloak-home-idp-discovery-25.0.0.jar:/opt/keycloak/providers/keycloak-home-idp-discovery.jar:z
      - ./keycloak-ext/apple-identity-provider-1.13.0.jar:/opt/keycloak/providers/apple-identity-provider.jar:z
#      - ./keycloak-ext/flyweight-user-storage-provider-extension-1.0.0.0-SNAPSHOT.jar:/opt/keycloak/providers/flyweight-user-storage-provider-extension-1.0.0.0-SNAPSHOT.jar:z
      - ./keycloakx/health_check.sh:/health_check.sh:z

    healthcheck:
      test: ["CMD", "./health_check.sh"]
      interval: 10s
      timeout: 5s
      retries: 10